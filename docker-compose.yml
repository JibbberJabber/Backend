version: '3'

services:

  #  ghcr.io/jibbberjabber/folllowing-api:master

  datadog:
    image: datadog/agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_APM_ENABLED=true
      - DD_STEP=PT10S
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    labels:
      com.datadoghq.ad.logs: '[{"source": "java", "service": "api", "log_processing_rules": [{"type": "multi_line", "name": "log_start_with_date", "pattern" : "\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])"}]}]'

  follow-api:
    container_name: "follow-api"
    image: ghcr.io/jibbberjabber/folllowing-api:master

    ports:
      - 8080:8080
    environment:
     - DB_USER=postgres
     - DB_PASSWORD=admin
     - DB_NAME=followers-db
     - DB_HOST=follow_db
     - DB_PORT=5432
     - DD_API_KEY=${DD_API_KEY}
     - DD_SITE=datadoghq.com
     - DD_LOGS_ENABLED=true
     - DD_APM_ENABLED=true
     - DD_STEP=PT10S
     - KC_URL=${KC_DOMAIN}/auth
     - KEYCLOAK_POST_SECRET=${KEYCLOAK_FOLLOW_SECRET}

  follow_db:
    container_name: follow_db
    image: postgres:12
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: followers-db
    volumes:
      - followdata:/var/lib/postgresql/data


  posts-api:
    container_name: "posts-api"
    image: ghcr.io/jibbberjabber/posts-api:master
    ports:
      - 8083:8083
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=admin
      - DB_NAME=posts-db
      - DB_HOST=posts-db
      - DB_PORT=5432
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_APM_ENABLED=true
      - DD_STEP=PT10S
      - KC_URL=${KC_DOMAIN}/auth
      - KEYCLOAK_POST_SECRET=${KEYCLOAK_POST_SECRET}

  posts-db:
    container_name: posts-db
    image: postgres:12
    ports:
      - 5435:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: posts-db
    volumes:
      - postdata:/var/lib/postgresql/data2

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:legacy
    environment:
     - DB_VENDOR=POSTGRES
     - DB_ADDR=postgres
     - DB_DATABASE=keycloak
     - DB_USER=keycloak
     - DB_SCHEMA=public
     - DB_PASSWORD=password
     - KEYCLOAK_USER=admin
     - KEYCLOAK_PASSWORD=Pa55w0rd
     - PROXY_ADDRESS_FORWARDING=true
     - KC_PROXY=passthrough
     - KEYCLOAK_PROXY=passthrough
    ports:
      - 8087:8080
    depends_on:
      - postgres

  reverse-proxy:
    container_name: jibber-jabber-reverse-proxy
    image: ghcr.io/jibbberjabber/jibber-jabber-base-ui:develop
    #    image: ghcr.io/jibbberjabber/jibber-jabber-base-ui:${environment}
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro


  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw


#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - ./certbot/www/:/var/www/certbot/:rw
#      - ./certbot/conf/:/etc/letsencrypt/:rw




volumes:
  postdata:
    external: false
  followdata:
    external: false
  postgres_data:
    driver: local

networks:
   keycloak-net:
     external: true
